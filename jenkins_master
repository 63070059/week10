// pipeline {
//     agent any
    
//     environment {
//         DOCKER_CONTAINER_NAME1 = "fast-api_container"
//         DOCKER_CONTAINER_NAME2 = "frontend_container"

//         DOCKER_IMAGE_NAME1     = "fast-api-docker_lab5"
//         DOCKER_IMAGE_NAME2     = "frontend"

//         PORT_BACKEND           = "8088"
//         PORT_FRONTEND          = "5000"
//     }

//     stages {
//         stage('Clean up') {
//             steps {
//                 echo 'Initial : Delete  containers and images'
//                 sh 'docker stop ${DOCKER_CONTAINER_NAME1} || true'
//                 sh 'docker stop ${DOCKER_CONTAINER_NAME2} || true'

//                 sh 'docker rm ${DOCKER_CONTAINER_NAME1} || true'
//                 sh 'docker rm ${DOCKER_CONTAINER_NAME2} || true'

//                 sh 'docker rmi ${DOCKER_IMAGE_NAME2} || true'
//                 sh 'docker rmi ${DOCKER_IMAGE_NAME2} || true'
//               }
//         }

//         stage('Build Backend') {
//             steps {
//                     echo "Current path is ${pwd()}"
//                     sh "docker build -t ${DOCKER_IMAGE_NAME1} ."
//                     dir('frontend') {
//                         echo "Current path is ${pwd()}"
//                         sh "docker build -t ${DOCKER_IMAGE_NAME2} ."
//                     }
//                 }
//             }

//         stage('Run Stage') {
//             steps {
//                 sh "docker run -d -p ${PORT_BACKEND}:80 --name ${DOCKER_CONTAINER_NAME1} ${DOCKER_IMAGE_NAME1}"
//                 sh "docker run -d -p ${PORT_FRONTEND}:3000 --name ${DOCKER_CONTAINER_NAME2} ${DOCKER_IMAGE_NAME2}"

//             }
//         }
//     }
// }

pipeline {
    agent any
    
    environment {
        DOCKER_COMPOSE_FILE = 'docker-compose.yml'
    }
    
    stages {
        stage('Clean up') {
            steps {
                echo 'Initial : Stop and remove running containers'
                sh 'docker-compose -f ${DOCKER_COMPOSE_FILE} down --remove-orphans'
            }
        }

        stage('Build and Run Containers') {
            steps {
                echo 'Build and Run the Containers using Docker Compose'
                sh "docker-compose -f ${DOCKER_COMPOSE_FILE} up -d"
            }
        }
    }
}